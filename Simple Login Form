import product.entry.FoodEntry;

import javax.swing.JOptionPane;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        Main m = new Main();
        boolean bolLogin = false;

        while (!bolLogin) {
            bolLogin = m.login();

            if (bolLogin) {
                //JOptionPane.showMessageDialog(null,"Good");
                m.ChooseCategory();
            }
            else {
                JOptionPane.showMessageDialog(null, "Try Again");
            }
        }
    }

    // User Info
    String[][] user = {
            {"Maung", "123"},
            {"Su Su", "123"},
            {"Nandar", "213"}
    };

    public void ChooseCategory(){
        String[] categories = {"Drink","Fruit", "Snack", "All"};

        int option = JOptionPane.showOptionDialog
                (null,
                        "Select category",
                        "Category Selection",
                        JOptionPane.DEFAULT_OPTION,
                        JOptionPane.PLAIN_MESSAGE,
                        null,
                        categories,
                        categories[0]
                );

        switch (option){
            case 0: Drink();break;
            case 1: Fruit();break;
            case 2: Snack();break;
            case 3: displayFoods();break;
        }
    }
    public FoodEntry[] getFood(){
        return new FoodEntry[]{
                new FoodEntry("Bubble Tea","Drink",4500),
                new FoodEntry("Tea","Drink",2300),
                new FoodEntry("Apple","Fruit",500),
                new FoodEntry("Pineapple","Fruit",700),
                new FoodEntry("Ice-cream","snack",1500),
                new FoodEntry("Potato-chip","snack",1800)
        };
    }

    public void displayFoods() {
        StringBuilder snackList = new StringBuilder();
        FoodEntry[] foodEntries = getFood();
        for (int i = 0; i < foodEntries.length; i++) {
            int number = i + 1;
                snackList.append(number).append("\t")
                        .append(foodEntries[i].getProductName()).append("\t|\t")
                        .append(foodEntries[i].getCategory()).append("\t|\t")
                        .append(foodEntries[i].getPrice()).append("\n");

        }
        JOptionPane.showMessageDialog(null, snackList.toString(), "Available Snacks", JOptionPane.INFORMATION_MESSAGE);
    }
    public void Drink() {
        StringBuilder snackList = new StringBuilder();
        FoodEntry[] foodEntries = getFood();
        int n = 0;
        for (int i = 0; i < foodEntries.length; i++) {


            if (foodEntries[i].getCategory().equals("Drink")) {
                snackList.append(n += 1).append("\t")
                        .append(foodEntries[i].getProductName()).append("\t|\t")
                        .append(foodEntries[i].getCategory()).append("\t|\t")
                        .append(foodEntries[i].getPrice()).append("\n");
            }
        }
        JOptionPane.showMessageDialog(null, snackList.toString(), "Available Snacks", JOptionPane.INFORMATION_MESSAGE);
    }

    public void Fruit() {
        StringBuilder snackList = new StringBuilder();
        FoodEntry[] foodEntries = getFood();
        int incre = 0;
        for (int i = 0; i < foodEntries.length; i++) {
            if (foodEntries[i].getCategory().equals("Fruit")) {
                
                incre += 1;
                snackList.append(incre).append("\t|")
                        .append(foodEntries[i].getProductName()).append("\t|\t")
                        .append(foodEntries[i].getCategory()).append("\t|\t")
                        .append(foodEntries[i].getPrice()).append("\n");
            }
        }
        JOptionPane.showMessageDialog(null, snackList.toString(), "Available Snacks", JOptionPane.INFORMATION_MESSAGE);
    }

    public void Snack() {
        StringBuilder snackList = new StringBuilder();
        FoodEntry[] foodEntries = getFood();
        int n = 0;
        for (int i = 0; i < foodEntries.length; i++) {
            if (foodEntries[i].getCategory().equals("snack")) {
                snackList.append(n+=1).append("\t")
                        .append(foodEntries[i].getProductName()).append("\t|\t")
                        .append(foodEntries[i].getCategory()).append("\t|\t")
                        .append(foodEntries[i].getPrice()).append("\n");
            }
        }
        JOptionPane.showMessageDialog(null, snackList.toString(), "Available Snacks", JOptionPane.INFORMATION_MESSAGE);
    }

    public boolean login() {
        String userName = JOptionPane.showInputDialog("Enter User Name");
        String password = JOptionPane.showInputDialog("Enter Password");

        for (String[] userData : user) {
            String username = userData[0];
            String userPassword = userData[1];
                                            /*[Maung, 123] ==> index 0,1
                                              [Su Su, 123] ==> index 0,1
                                              [Nandar, 213]==> index 0,1
                                              */

            if (userName.equals(username) && password.equals(userPassword)) {
                return true;
            }
        }

        return false;
    }

}
